function h(i){return i.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}function u(i){return i=i.replace(/-([a-z])/g,(t,e)=>e.toUpperCase()),i.charAt(0).toLowerCase()+i.slice(1)}function a(i,t){return i.matches(t)?i:i.querySelector(t)}function m(i,t){let e=[];return i.matches(t)&&e.push(i),e.push(...Array.from(i.querySelectorAll(t))),e}var l=class{element;initialized=!1;DOM={};controllerName;controllerKebabName;constructor(t){this.element=t,this.controllerName=u(this.getControllerName()),this.controllerKebabName=h(this.controllerName),this.init()}init(){this.initialized||(this.connect(),this.setupActions(),this.initialized=!0)}initializeDOM(t){return this.DOM={el:this.element,...t},t}getDOMElement(t){return Array.isArray(this.DOM[t])?this.DOM[t][0]:this.DOM[t]}getDOMArray(t){let e=this.DOM[t];return e?Array.isArray(e)?e:[e]:[]}getTarget(t,e){let n=e||this.element,r=`[data-${this.controllerKebabName}-target="${t}"]`;return a(n,r)}getTargets(t,e){let n=e||this.element;return m(n,`[data-${this.controllerKebabName}-target="${t}"]`)}getGlobalTarget(t){return document.querySelector(`[data-${this.controllerKebabName}-target="${t}"]`)}setupActions(){m(this.element,"[data-action]").forEach(e=>{let n=e.getAttribute("data-action");if(n){let[r,o]=n.split("->"),[c,s]=o.split("#");if(c===this.controllerKebabName){let d=this[s];typeof d=="function"&&e.addEventListener(r,p=>{let b=this.extractActionParams(e);p.params=b,d.call(this,p)})}}})}extractActionParams(t){let e={};for(let[n,r]of Object.entries(t.dataset))if(n.startsWith(this.controllerName)&&n.endsWith("Param")){let o=u(n.slice(this.controllerName.length,-5));e[o]=this.parseParamValue(r)}return e}parseParamValue(t){if(t==null||t.trim()==="")return"";let e=t.trim();if(/^(true|false)$/i.test(e))return e.toLowerCase()==="true";if(/^[+-]?\d+(\.\d+)?([eE][+-]?\d+)?$/.test(e)){let n=Number(e);if(!Number.isNaN(n)&&Number.isFinite(n))return n}if(/^(null|undefined)$/i.test(e))return e.toLowerCase()==="null"?null:void 0;if(/^[{[]/.test(e)||/^".*"$/.test(e))try{return JSON.parse(e)}catch{}return t}getValue(t,e){let n=`data-${this.controllerKebabName}-${t}-value`,r=e||this.element,o=a(r,`[${n}]`);return o&&o.getAttribute(n)||""}setValue(t,e,n){let r=`data-${this.controllerKebabName}-${t}-value`;(n||this.element).setAttribute(r,e)}hasValue(t,e){let n=`data-${this.controllerKebabName}-${t}-value`,r=e||this.element;return a(r,`[${n}]`)!==null}on(t,e){document.addEventListener(t,e)}dispatch(t,e={}){let n=new CustomEvent(t,{detail:e,bubbles:!0});document.dispatchEvent(n)}getControllerName(){return this.constructor.name.replace(/^_/,"").replace(/Controller$/,"")}};var g=class i extends l{static FEEDBACK_DELAY=750;isAnimationRunning=!1;btnClicked=null;connect(){}_sanitizeContent(t,e=!1){let n=t.innerHTML.replace(/<span[^>]*class="chroma-ln"[^>]*>[\s\S]*?<\/span>/g,""),r=document.createElement("div");r.innerHTML=n;let o=r.textContent?.trim()||"";return e&&(o=o.split(`
`).filter(c=>{let s=c.trim();return s&&!s.match(/^[#/*]/)}).join(`
`)),o}_toggleIcons(t){t.forEach(e=>{e.classList.toggle("u-hidden")})}_showFeedback(t){!this.btnClicked||this.isAnimationRunning===!0||(this.isAnimationRunning=!0,this._toggleIcons(t),window.setTimeout(()=>{this._toggleIcons(t),this.isAnimationRunning=!1},i.FEEDBACK_DELAY))}async _writeToClipboard(t,e){if(!navigator.clipboard){console.error("Copy: Clipboard API is not supported in this browser."),this._showFeedback(e);return}try{await navigator.clipboard.writeText(t),this._showFeedback(e)}catch(n){console.error("Copy: Error while copying text.",n),this._showFeedback(e)}}async _copyTextToClipboard(t,e){let n=t.trim();await this._writeToClipboard(n,e)}async _copyToClipboard(t,e,n=!1){let r=this._sanitizeContent(t,n);await this._writeToClipboard(r,e)}copy(t){if(this.btnClicked=t.currentTarget,this.isAnimationRunning)return;let e=this.getTargets("icon"),n=Array.from(e);if(this.getValue("text")){this._copyTextToClipboard(this.getValue("text"),n);return}if(this.getValue("remote")){let r=this.getGlobalTarget(this.getValue("remote"));if(!r){console.warn(`Copy: No target found for "${this.getValue("remote")}".`);return}let o=this.hasValue("clean");this._copyToClipboard(r,n,o);return}console.warn("Copy: No content to copy found on the button.")}};export{g as CopyController};
